# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["nvme" "xhci_pci" "ahci" "uas" "usbhid" "sd_mod"];
  boot.initrd.kernelModules = ["dm-snapshot" "dm-raid1" "dm-raid0" "dm-cache" "dm_integrity" "dm-raid"];
  boot.kernelModules = ["kvm-amd" "dm-raid1" "dm-raid0" "dm-cache" "dm_integrity" "dm-raid"];
  boot.extraModulePackages = [];
  # boot.kernelPackages = pkgs.linuxPackages_zen;

  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/76792cd4-637d-4f73-9ed0-224e836b4b20";
    fsType = "btrfs";
    options = ["subvol=root" "compress=zstd"];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/76792cd4-637d-4f73-9ed0-224e836b4b20";
    fsType = "btrfs";
    options = ["subvol=home" "compress=zstd"];
  };

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/76792cd4-637d-4f73-9ed0-224e836b4b20";
    fsType = "btrfs";
    options = ["subvol=nix" "compress=zstd"];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/EC17-7450";
    fsType = "vfat";
  };

  fileSystems."/home/still/.local/share/Steam/steamapps" = {
    device = "/dev/disk/by-uuid/76792cd4-637d-4f73-9ed0-224e836b4b20";
    fsType = "btrfs";
    options = ["subvol=steamapps" "compress=zstd"];
  };

  fileSystems."/mnt/r0" = {
    device = "/dev/disk/by-uuid/100de3ba-f379-458e-9c18-f8258718ee5e";
    fsType = "ext4";
    options = ["nofail"];
  };

  fileSystems."/mnt/r1" = {
    device = "/dev/disk/by-uuid/33359717-9035-4c9d-8546-cc4af0ee0367";
    fsType = "ext4";
    options = ["nofail"];
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/d19f13d2-5f0b-4b6a-bb74-87f30070b9ae";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  # networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp42s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp6s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
